// Timeline with areas ("breakpoints") spanning time periods

.timeline {
  width: 100%;
  height: 10rem;
  position: relative;
  display: block;

  @include respond(tab-land) {
    height: 6rem;
  }

  @include respond(phone) {
    width: 88%;
    left: -2.5rem;
  }

  // -- breakpoint is a time-span area placed on the timeline
  &__breakpoint {
    opacity: 0;
    animation: fadeIn 0.8s 0.8s forwards;
    position: absolute;

    top: -5.2rem;
    display: block;
    height: 12rem;
    width: 1px;
    transform: none;
    z-index: 1;
    transform-origin: right;
    cursor: pointer;

    @include respond(tab-land) {
      height: 10rem;
    }

    // -- breakpoint 45degree marks (for selection & hover area)
    // (invisible by default)
    &::after {
      content: "";
      position: absolute;
      top: 3.5rem;
      width: 100%;
      height: 2.5rem;
      transition: opacity 0.7s;
      display: block;
      opacity: 0;
    }

    // activated 45 degree marks
    &:hover::after,
    &--selected::after {
      opacity: 1;
      background-image: repeating-linear-gradient(
        45deg,
        transparent,
        transparent 5px,
        rgba($color-secondary, 0.1) 5px,
        rgba($color-secondary, 0.1) 10px
      );
    }

    // border delimiting breakpoints (experiences)
    &::before {
      content: "";
      position: absolute;
      left: 0;
      bottom: 0;
      width: 2px;
      height: 70%;

      border-left: solid 2px rgba($color-secondary-dark, 0.5);
      z-index: -10;
    }

    &--overflown::before,
    &--overflown + &::before {
      height: 50%;
      opacity: 0.3;
    }
  }

  // -- breakpoint text
  &__bp-header {
    text-align: center;
    font-weight: 200;
    letter-spacing: 0.1rem;
    line-height: 2rem;

    @include respond(phone) {
      display: none;
    }

    &--main {
      display: block;
      font-size: 1.4rem;
      @include respond(tab-land) {
        font-size: 1.2rem;
      }

      color: $color-grey-light-2;
    }

    &--sub {
      font-size: 1.1rem;
      @include respond(tab-land) {
        font-size: 1rem;
      }
      color: $color-grey-dark-2;
    }

    &--overflown {
      text-align: center;
      font-weight: 200;
      letter-spacing: 0.3rem;
      height: 100%;
      position: relative;

      &--main {
        padding: 1px;
        display: block;
        position: relative;

        font-size: 1rem;
        color: $color-grey-light-2;
        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;

        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(-45deg);

        width: 18rem;
      }

      &--main::before {
        content: "";
        z-index: -1;
        position: absolute;
        background-color: $color-primary;
        border-bottom: 2px solid $color-secondary;

        // to center (if width 100%, then left would be 50%)
        height: 100%;
        width: 90%;
        left: -40%;

        transform: translateX(50%) skewX(45deg);
      }

      &--sub {
        display: none;
      }
    }
  }

  // -- ribbon spanning the entire width of the timeline
  &__ribbon {
    animation: expandWidth 2s;
    position: absolute;
    width: 100%;
    top: 1rem;

    background-image: linear-gradient(
      to right,
      transparent,
      $color-secondary 20%
    );
    height: 1rem;
  }

  // -- time delimiters for the timeline
  &__dateline {
    animation: fadeIn 2.2s;
    position: absolute;
    top: 4.5rem;
    width: 100%;

    background-color: $color-grey-dark-1;
    height: 2px;
    @include respond(tab-land) {
      top: 2.5rem;
    }
  }

  // -- marks on dateline indicating years
  &__date-mark {
    position: absolute;

    // date-mark (vertical bar indicating start of the year)
    &::before {
      content: "";
      position: absolute;
      width: 2px;

      height: 2rem;
      border-left: 2px solid $color-grey-dark-1;
    }

    // year text (201X)
    & > span {
      display: inline-block;
      margin: 0.5rem 1rem;
      letter-spacing: 0.2rem;
    }
  }
}
